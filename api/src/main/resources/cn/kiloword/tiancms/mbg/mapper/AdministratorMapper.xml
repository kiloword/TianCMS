<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.kiloword.tiancms.mbg.mapper.AdministratorMapper">
  <resultMap id="BaseResultMap" type="cn.kiloword.tiancms.mbg.model.Administrator">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="password_salt" jdbcType="VARCHAR" property="passwordSalt" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="count_of_login" jdbcType="INTEGER" property="countOfLogin" />
    <result column="count_of_failed_login" jdbcType="INTEGER" property="countOfFailedLogin" />
    <result column="creator_name" jdbcType="VARCHAR" property="creatorName" />
    <result column="locked_out" jdbcType="BIT" property="lockedOut" />
    <result column="department_id" jdbcType="BIGINT" property="departmentId" />
    <result column="area_id" jdbcType="BIGINT" property="areaId" />
    <result column="site_id_set" jdbcType="VARCHAR" property="siteIdSet" />
    <result column="site_id" jdbcType="BIGINT" property="siteId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, password, password_salt, icon, email, mobile, nickname, note, create_time, 
    modify_time, last_login_time, count_of_login, count_of_failed_login, creator_name, 
    locked_out, department_id, area_id, site_id_set, site_id
  </sql>
  <select id="selectByExample" parameterType="cn.kiloword.tiancms.mbg.model.AdministratorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from administrator
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from administrator
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from administrator
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.kiloword.tiancms.mbg.model.AdministratorExample">
    delete from administrator
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.kiloword.tiancms.mbg.model.Administrator">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into administrator (username, password, password_salt, 
      icon, email, mobile, 
      nickname, note, create_time, 
      modify_time, last_login_time, count_of_login, 
      count_of_failed_login, creator_name, locked_out, 
      department_id, area_id, site_id_set, 
      site_id)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{passwordSalt,jdbcType=VARCHAR}, 
      #{icon,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{countOfLogin,jdbcType=INTEGER}, 
      #{countOfFailedLogin,jdbcType=INTEGER}, #{creatorName,jdbcType=VARCHAR}, #{lockedOut,jdbcType=BIT}, 
      #{departmentId,jdbcType=BIGINT}, #{areaId,jdbcType=BIGINT}, #{siteIdSet,jdbcType=VARCHAR}, 
      #{siteId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.kiloword.tiancms.mbg.model.Administrator">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into administrator
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="passwordSalt != null">
        password_salt,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="countOfLogin != null">
        count_of_login,
      </if>
      <if test="countOfFailedLogin != null">
        count_of_failed_login,
      </if>
      <if test="creatorName != null">
        creator_name,
      </if>
      <if test="lockedOut != null">
        locked_out,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="siteIdSet != null">
        site_id_set,
      </if>
      <if test="siteId != null">
        site_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordSalt != null">
        #{passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="countOfLogin != null">
        #{countOfLogin,jdbcType=INTEGER},
      </if>
      <if test="countOfFailedLogin != null">
        #{countOfFailedLogin,jdbcType=INTEGER},
      </if>
      <if test="creatorName != null">
        #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="lockedOut != null">
        #{lockedOut,jdbcType=BIT},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=BIGINT},
      </if>
      <if test="siteIdSet != null">
        #{siteIdSet,jdbcType=VARCHAR},
      </if>
      <if test="siteId != null">
        #{siteId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.kiloword.tiancms.mbg.model.AdministratorExample" resultType="java.lang.Integer">
    select count(*) from administrator
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update administrator
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordSalt != null">
        password_salt = #{record.passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.countOfLogin != null">
        count_of_login = #{record.countOfLogin,jdbcType=INTEGER},
      </if>
      <if test="record.countOfFailedLogin != null">
        count_of_failed_login = #{record.countOfFailedLogin,jdbcType=INTEGER},
      </if>
      <if test="record.creatorName != null">
        creator_name = #{record.creatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.lockedOut != null">
        locked_out = #{record.lockedOut,jdbcType=BIT},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=BIGINT},
      </if>
      <if test="record.areaId != null">
        area_id = #{record.areaId,jdbcType=BIGINT},
      </if>
      <if test="record.siteIdSet != null">
        site_id_set = #{record.siteIdSet,jdbcType=VARCHAR},
      </if>
      <if test="record.siteId != null">
        site_id = #{record.siteId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update administrator
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      password_salt = #{record.passwordSalt,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      count_of_login = #{record.countOfLogin,jdbcType=INTEGER},
      count_of_failed_login = #{record.countOfFailedLogin,jdbcType=INTEGER},
      creator_name = #{record.creatorName,jdbcType=VARCHAR},
      locked_out = #{record.lockedOut,jdbcType=BIT},
      department_id = #{record.departmentId,jdbcType=BIGINT},
      area_id = #{record.areaId,jdbcType=BIGINT},
      site_id_set = #{record.siteIdSet,jdbcType=VARCHAR},
      site_id = #{record.siteId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.kiloword.tiancms.mbg.model.Administrator">
    update administrator
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordSalt != null">
        password_salt = #{passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="countOfLogin != null">
        count_of_login = #{countOfLogin,jdbcType=INTEGER},
      </if>
      <if test="countOfFailedLogin != null">
        count_of_failed_login = #{countOfFailedLogin,jdbcType=INTEGER},
      </if>
      <if test="creatorName != null">
        creator_name = #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="lockedOut != null">
        locked_out = #{lockedOut,jdbcType=BIT},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=BIGINT},
      </if>
      <if test="siteIdSet != null">
        site_id_set = #{siteIdSet,jdbcType=VARCHAR},
      </if>
      <if test="siteId != null">
        site_id = #{siteId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.kiloword.tiancms.mbg.model.Administrator">
    update administrator
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      password_salt = #{passwordSalt,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      count_of_login = #{countOfLogin,jdbcType=INTEGER},
      count_of_failed_login = #{countOfFailedLogin,jdbcType=INTEGER},
      creator_name = #{creatorName,jdbcType=VARCHAR},
      locked_out = #{lockedOut,jdbcType=BIT},
      department_id = #{departmentId,jdbcType=BIGINT},
      area_id = #{areaId,jdbcType=BIGINT},
      site_id_set = #{siteIdSet,jdbcType=VARCHAR},
      site_id = #{siteId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>